{"version":3,"sources":["file:////home/jose/Proyectos/aframe-typescript-toolkit/src/aframe_wrapper.ts","file:////home/jose/Proyectos/aframe-typescript-toolkit/src/entity_builder.ts","file:////home/jose/Proyectos/aframe-typescript-toolkit/src/index.ts","file:///webpack/bootstrap","file:///webpack/startup"],"names":["hasMethod","obj","name","desc","Object","getOwnPropertyDescriptor","value","getInstanceMethodNames","stop","array","proto","getPrototypeOf","getOwnPropertyNames","forEach","push","schema","this","remove","update","oldData","extendSchema","flushToDOM","init","pause","play","merge","prototype","k","destroy","parent","el","parentElement","removeChild","register","AFRAME","components","console","log","registerComponent","registerCallback","callbackName","fn","addEventListener","bind","ComponentWrapper","registerSystem","SystemWrapper","type","attributes","entity","document","createElement","setAttributes","create","children","builder","EntityBuilder","c","attachTo","set","a","b","setAttribute","keys","toEntity","appendChild","querySelector","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__"],"mappings":"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","file":"index.js","sourcesContent":["import * as AFrame from \"aframe\"\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// helpers\n\n/***\n * @hidden\n */\nconst hasMethod = (obj: {}, name: string) => {\n    const desc = Object.getOwnPropertyDescriptor (obj, name)\n    return !!desc && typeof desc.value === \"function\"\n}\n\n/***\n * @hidden\n */\nconst getInstanceMethodNames = (obj: {}, stop: {}) => {\n    const array: string[] = []\n    let proto = Object.getPrototypeOf (obj)\n    while (proto && proto !== stop) {\n        Object.getOwnPropertyNames (proto)\n        .forEach (name => {\n            if (name !== \"constructor\") {\n            if (hasMethod (proto, name)) {\n                array.push (name)\n            }\n            }\n        })\n        proto = Object.getPrototypeOf(proto)\n    }\n    return array\n}\n\n/**\n * Extend this class to create strongly typed A-Frame components. \n * Default implementations for component lifecycle methods such as init(), tick(), and others are provided,\n * and can be overridden for your component's specific behavior.\n */\n\nexport abstract class ComponentWrapper<SCHEMA extends object = {}, SYSTEM extends AFrame.System = AFrame.System> \n    implements AFrame.Component<SCHEMA, SYSTEM> {\n\n    el: AFrame.Entity\n    id: string\n    initialized: boolean;\n    data: SCHEMA\n    schema: AFrame.Schema<SCHEMA>\n    system: SYSTEM\n    name: string\n\n    constructor(name: string, schema?: AFrame.Schema<SCHEMA>) {\n        this.name = name\n        this.schema = schema || {}\n    }\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // default aframe core function implementations\n\n    /**\n     * Wraps https://aframe.io/docs/0.8.0/core/component.html#definition_lifecycle_handler_methods_remove.\n     */\n    remove() {}\n    /**\n     * Wraps https://aframe.io/docs/0.8.0/core/component.html#definition_lifecycle_handler_methods_update.\n     */\n    update(oldData: {}) {}\n    /**\n     * Wraps https://aframe.io/docs/0.8.0/core/component.html#definition_lifecycle_handler_methods_updateschema.\n     */\n    extendSchema(update: {}) {}\n    flushToDOM() {}\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // default aframe core function implementations\n\n    /**\n     * Wraps https://aframe.io/docs/0.8.0/core/component.html#definition_lifecycle_handler_methods_init.\n     */\n    init() {}\n    /**\n     * Wraps https://aframe.io/docs/0.8.0/core/component.html#definition_lifecycle_handler_methods_pause.\n     */\n    pause() {}\n    /**\n     * Wraps https://aframe.io/docs/0.8.0/core/component.html#definition_lifecycle_handler_methods_play.\n     */\n    play() {}\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // special wrapper functions implementations\n\n    /***\n     * @hidden\n     */\n    merge() {\n        const funcs = getInstanceMethodNames(this, Object.prototype)\n        funcs.forEach( k => this[k] = this[k])\n    }\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // special wrapper functions implementations\n\n    destroy() {\n        const parent = this.el.parentElement\n        if (!!parent) {\n            parent.removeChild(this.el)\n        }\n    }\n\n    register() {\n        // unregister any existing component\n        if (!!AFRAME.components[this.name]) {\n            console.log(`WARNING -- unregistering already registered component with name \"${this.name}\".`)\n            delete AFRAME.components[this.name]\n        }\n\n        this.merge()\n        AFRAME.registerComponent(this.name, this)\n\n        return this\n    }\n\n    registerCallback(callbackName: string, fn: Function) {\n        this.el.addEventListener(callbackName, fn.bind(this))\n    }\n}\n\nexport abstract class SystemWrapper<SCHEMA extends { [key: string]: any } = {}>\n    implements AFrame.System {\n\n    el: AFrame.Entity\n    data: SCHEMA\n    schema: AFrame.Schema<SCHEMA>\n    name: string\n\n    constructor(name: string, schema?: AFrame.Schema<SCHEMA>) {\n        this.name = name\n        this.schema = schema || {}\n    }\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // default aframe core function implementations\n\n    init() {}\n    pause() {}\n    play() {}\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // special wrapper functions implementations\n\n    /***\n     * @hidden\n     */\n    merge() {\n        const funcs = getInstanceMethodNames(this, Object.prototype)\n        funcs.forEach( k => this[k] = this[k])\n    }\n\n    register() {\n        this.merge()\n        AFRAME.registerSystem(this.name, this)\n    }\n}","import { ComponentWrapper } from \"./aframe_wrapper\"\nimport * as AFrame from \"aframe\"\n\nexport interface Attributes {\n    [key: string]: {}\n}\n\nexport class EntityBuilder {\n    private entity: AFrame.Entity\n\n    constructor(type: string, attributes?: Attributes) {\n        this.entity = <AFrame.Entity> document.createElement(type)\n        if (attributes) {\n            this.setAttributes(attributes)\n        }\n    }\n\n    static create(type: string, attributes: Attributes, children?: EntityBuilder[]): EntityBuilder {\n        const builder = new EntityBuilder(type, attributes)\n        if (!!children) {\n            children.forEach( c => {\n                c.attachTo(builder.entity)\n            })\n        }\n        return builder\n    }\n\n    set(a: string, b?: any, c?: {}): EntityBuilder {\n        if (!!b && !!c) {\n            this.entity.setAttribute(a, b, c)\n        } else if (!!b) {\n            this.entity.setAttribute(a, b || \"\")\n        } else {\n            this.entity.setAttribute(a, \"\")\n        }\n        return this\n    }\n\n    setAttributes(attributes: Attributes): EntityBuilder {\n        Object.keys(attributes).forEach( k => {\n            this.set(k, attributes[k])            \n        })\n        return this\n    }\n\n    toEntity(): AFrame.Entity {\n        return this.entity\n    }\n\n    attachTo(parent?: EntityBuilder | AFrame.ANode | AFrame.Scene | AFrame.Entity | ComponentWrapper): EntityBuilder {\n        if (!parent) {\n            // attach to the scene by default\n            document.querySelector(\"a-scene\").appendChild(this.entity)\n            return this\n        }\n\n        // a parent was specified\n        if (\"el\" in parent) {\n            // there's an element in this parent; attach the entity\n            // being created there\n            parent.el.appendChild(this.entity)\n        } else {\n            // there isn't; attach directly\n            if (\"appendChild\" in parent) {\n                parent.appendChild(this.entity)\n            } else {\n                // parent.attach(this.entity)\n            }\n        }    \n\n        return this\n    }\n\n}","import { ComponentWrapper, SystemWrapper } from \"./aframe_wrapper\"\nimport { EntityBuilder } from \"./entity_builder\"\nexport {\n    ComponentWrapper,\n    SystemWrapper,\n    EntityBuilder,\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module\n__webpack_require__(460);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}